/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppArtists {
    }
    interface AppHome {
    }
    interface AppRoot {
    }
    interface ArtistsFirstAppearance {
    }
    interface DatePicker {
        "max"?: string;
        "min"?: string;
        "value"?: string;
    }
    interface MostListenedArtists {
    }
    interface MostListenedGenres {
    }
    interface MostListenedGenresAllTime {
    }
}
declare global {
    interface HTMLAppArtistsElement extends Components.AppArtists, HTMLStencilElement {
    }
    var HTMLAppArtistsElement: {
        prototype: HTMLAppArtistsElement;
        new (): HTMLAppArtistsElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLArtistsFirstAppearanceElement extends Components.ArtistsFirstAppearance, HTMLStencilElement {
    }
    var HTMLArtistsFirstAppearanceElement: {
        prototype: HTMLArtistsFirstAppearanceElement;
        new (): HTMLArtistsFirstAppearanceElement;
    };
    interface HTMLDatePickerElement extends Components.DatePicker, HTMLStencilElement {
    }
    var HTMLDatePickerElement: {
        prototype: HTMLDatePickerElement;
        new (): HTMLDatePickerElement;
    };
    interface HTMLMostListenedArtistsElement extends Components.MostListenedArtists, HTMLStencilElement {
    }
    var HTMLMostListenedArtistsElement: {
        prototype: HTMLMostListenedArtistsElement;
        new (): HTMLMostListenedArtistsElement;
    };
    interface HTMLMostListenedGenresElement extends Components.MostListenedGenres, HTMLStencilElement {
    }
    var HTMLMostListenedGenresElement: {
        prototype: HTMLMostListenedGenresElement;
        new (): HTMLMostListenedGenresElement;
    };
    interface HTMLMostListenedGenresAllTimeElement extends Components.MostListenedGenresAllTime, HTMLStencilElement {
    }
    var HTMLMostListenedGenresAllTimeElement: {
        prototype: HTMLMostListenedGenresAllTimeElement;
        new (): HTMLMostListenedGenresAllTimeElement;
    };
    interface HTMLElementTagNameMap {
        "app-artists": HTMLAppArtistsElement;
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
        "artists-first-appearance": HTMLArtistsFirstAppearanceElement;
        "date-picker": HTMLDatePickerElement;
        "most-listened-artists": HTMLMostListenedArtistsElement;
        "most-listened-genres": HTMLMostListenedGenresElement;
        "most-listened-genres-all-time": HTMLMostListenedGenresAllTimeElement;
    }
}
declare namespace LocalJSX {
    interface AppArtists {
    }
    interface AppHome {
    }
    interface AppRoot {
    }
    interface ArtistsFirstAppearance {
    }
    interface DatePicker {
        "max"?: string;
        "min"?: string;
        "onDateChange"?: (event: CustomEvent<string>) => void;
        "value"?: string;
    }
    interface MostListenedArtists {
    }
    interface MostListenedGenres {
    }
    interface MostListenedGenresAllTime {
    }
    interface IntrinsicElements {
        "app-artists": AppArtists;
        "app-home": AppHome;
        "app-root": AppRoot;
        "artists-first-appearance": ArtistsFirstAppearance;
        "date-picker": DatePicker;
        "most-listened-artists": MostListenedArtists;
        "most-listened-genres": MostListenedGenres;
        "most-listened-genres-all-time": MostListenedGenresAllTime;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-artists": LocalJSX.AppArtists & JSXBase.HTMLAttributes<HTMLAppArtistsElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "artists-first-appearance": LocalJSX.ArtistsFirstAppearance & JSXBase.HTMLAttributes<HTMLArtistsFirstAppearanceElement>;
            "date-picker": LocalJSX.DatePicker & JSXBase.HTMLAttributes<HTMLDatePickerElement>;
            "most-listened-artists": LocalJSX.MostListenedArtists & JSXBase.HTMLAttributes<HTMLMostListenedArtistsElement>;
            "most-listened-genres": LocalJSX.MostListenedGenres & JSXBase.HTMLAttributes<HTMLMostListenedGenresElement>;
            "most-listened-genres-all-time": LocalJSX.MostListenedGenresAllTime & JSXBase.HTMLAttributes<HTMLMostListenedGenresAllTimeElement>;
        }
    }
}
